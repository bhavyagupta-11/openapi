/*
 * openapi-swaggerui-quickstart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * VehicleProperties
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-20T05:00:37.574508435Z[GMT]")

public class VehicleProperties {
  @SerializedName("speed")
  private Double speed = null;

  @SerializedName("fuelLevel")
  private Double fuelLevel = null;

  @SerializedName("engineTemperature")
  private Double engineTemperature = null;

  @SerializedName("rpm")
  private Integer rpm = null;

  @SerializedName("batteryVoltage")
  private Double batteryVoltage = null;

  @SerializedName("odometer")
  private Double odometer = null;

  public VehicleProperties speed(Double speed) {
    this.speed = speed;
    return this;
  }

   /**
   * Get speed
   * @return speed
  **/
  @Schema(description = "")
  public Double getSpeed() {
    return speed;
  }

  public void setSpeed(Double speed) {
    this.speed = speed;
  }

  public VehicleProperties fuelLevel(Double fuelLevel) {
    this.fuelLevel = fuelLevel;
    return this;
  }

   /**
   * Get fuelLevel
   * @return fuelLevel
  **/
  @Schema(description = "")
  public Double getFuelLevel() {
    return fuelLevel;
  }

  public void setFuelLevel(Double fuelLevel) {
    this.fuelLevel = fuelLevel;
  }

  public VehicleProperties engineTemperature(Double engineTemperature) {
    this.engineTemperature = engineTemperature;
    return this;
  }

   /**
   * Get engineTemperature
   * @return engineTemperature
  **/
  @Schema(description = "")
  public Double getEngineTemperature() {
    return engineTemperature;
  }

  public void setEngineTemperature(Double engineTemperature) {
    this.engineTemperature = engineTemperature;
  }

  public VehicleProperties rpm(Integer rpm) {
    this.rpm = rpm;
    return this;
  }

   /**
   * Get rpm
   * @return rpm
  **/
  @Schema(description = "")
  public Integer getRpm() {
    return rpm;
  }

  public void setRpm(Integer rpm) {
    this.rpm = rpm;
  }

  public VehicleProperties batteryVoltage(Double batteryVoltage) {
    this.batteryVoltage = batteryVoltage;
    return this;
  }

   /**
   * Get batteryVoltage
   * @return batteryVoltage
  **/
  @Schema(description = "")
  public Double getBatteryVoltage() {
    return batteryVoltage;
  }

  public void setBatteryVoltage(Double batteryVoltage) {
    this.batteryVoltage = batteryVoltage;
  }

  public VehicleProperties odometer(Double odometer) {
    this.odometer = odometer;
    return this;
  }

   /**
   * Get odometer
   * @return odometer
  **/
  @Schema(description = "")
  public Double getOdometer() {
    return odometer;
  }

  public void setOdometer(Double odometer) {
    this.odometer = odometer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleProperties vehicleProperties = (VehicleProperties) o;
    return Objects.equals(this.speed, vehicleProperties.speed) &&
        Objects.equals(this.fuelLevel, vehicleProperties.fuelLevel) &&
        Objects.equals(this.engineTemperature, vehicleProperties.engineTemperature) &&
        Objects.equals(this.rpm, vehicleProperties.rpm) &&
        Objects.equals(this.batteryVoltage, vehicleProperties.batteryVoltage) &&
        Objects.equals(this.odometer, vehicleProperties.odometer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(speed, fuelLevel, engineTemperature, rpm, batteryVoltage, odometer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleProperties {\n");
    
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    fuelLevel: ").append(toIndentedString(fuelLevel)).append("\n");
    sb.append("    engineTemperature: ").append(toIndentedString(engineTemperature)).append("\n");
    sb.append("    rpm: ").append(toIndentedString(rpm)).append("\n");
    sb.append("    batteryVoltage: ").append(toIndentedString(batteryVoltage)).append("\n");
    sb.append("    odometer: ").append(toIndentedString(odometer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
